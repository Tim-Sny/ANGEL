//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ModelDB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBEntities : DbContext
    {
        public DBEntities()
            : base("name=DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<dAngel> dAngel { get; set; }
        public virtual DbSet<dAngelCharacter> dAngelCharacter { get; set; }
        public virtual DbSet<dAngelPracticeDay> dAngelPracticeDay { get; set; }
        public virtual DbSet<dAngelPracticeDayShift> dAngelPracticeDayShift { get; set; }
        public virtual DbSet<sActivity> sActivity { get; set; }
        public virtual DbSet<sActivityType> sActivityType { get; set; }
        public virtual DbSet<sCharacter> sCharacter { get; set; }
        public virtual DbSet<sCharacterType> sCharacterType { get; set; }
        public virtual DbSet<sLoyaltyToLaw> sLoyaltyToLaw { get; set; }
        public virtual DbSet<sLoyaltyToLawGroup> sLoyaltyToLawGroup { get; set; }
        public virtual DbSet<sScore> sScore { get; set; }
        public virtual DbSet<sSex> sSex { get; set; }
        public virtual DbSet<sTitle> sTitle { get; set; }
        public virtual DbSet<xActivityCharacterN> xActivityCharacterN { get; set; }
        public virtual DbSet<xActivityDay> xActivityDay { get; set; }
        public virtual DbSet<xCharacterDependence> xCharacterDependence { get; set; }
        public virtual DbSet<vCharacterDependence> vCharacterDependence { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int sp_xActivityCharacterN_Modify(Nullable<int> in_IDsACTIVITY, Nullable<int> in_IDsCHARACTER, Nullable<int> in_N, string in_VALUE)
        {
            var in_IDsACTIVITYParameter = in_IDsACTIVITY.HasValue ?
                new ObjectParameter("in_IDsACTIVITY", in_IDsACTIVITY) :
                new ObjectParameter("in_IDsACTIVITY", typeof(int));
    
            var in_IDsCHARACTERParameter = in_IDsCHARACTER.HasValue ?
                new ObjectParameter("in_IDsCHARACTER", in_IDsCHARACTER) :
                new ObjectParameter("in_IDsCHARACTER", typeof(int));
    
            var in_NParameter = in_N.HasValue ?
                new ObjectParameter("in_N", in_N) :
                new ObjectParameter("in_N", typeof(int));
    
            var in_VALUEParameter = in_VALUE != null ?
                new ObjectParameter("in_VALUE", in_VALUE) :
                new ObjectParameter("in_VALUE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_xActivityCharacterN_Modify", in_IDsACTIVITYParameter, in_IDsCHARACTERParameter, in_NParameter, in_VALUEParameter);
        }
    
        public virtual int sp_xActivityDay_Modify(Nullable<int> in_IDsACTIVITY, Nullable<int> in_N, Nullable<int> in_VALUE)
        {
            var in_IDsACTIVITYParameter = in_IDsACTIVITY.HasValue ?
                new ObjectParameter("in_IDsACTIVITY", in_IDsACTIVITY) :
                new ObjectParameter("in_IDsACTIVITY", typeof(int));
    
            var in_NParameter = in_N.HasValue ?
                new ObjectParameter("in_N", in_N) :
                new ObjectParameter("in_N", typeof(int));
    
            var in_VALUEParameter = in_VALUE.HasValue ?
                new ObjectParameter("in_VALUE", in_VALUE) :
                new ObjectParameter("in_VALUE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_xActivityDay_Modify", in_IDsACTIVITYParameter, in_NParameter, in_VALUEParameter);
        }
    }
}
